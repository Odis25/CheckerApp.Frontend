<div class="col">
    <div class="border p-2">
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Позиция по проекту" @bind-Value="Value.Position" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> Value.Position"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Серийный номер" @bind-Value="Value.SerialNumber" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> Value.SerialNumber"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Тип крана" @bind-Value="((ValveVm)Value).DeviceType" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> ((ValveVm)Value).DeviceType"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Модель крана" @bind-Value="((ValveVm)Value).DeviceModel" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> ((ValveVm)Value).DeviceModel"></ValidationMessage>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <MudSelect @bind-Value="((ValveVm)Value).SignalType" Label="Способ подключения" Variant="Variant.Outlined">
                    @foreach (var item in signals)
                    {
                        <MudSelectItem Value="item">@item.GetDisplayName()</MudSelectItem>
                    }
                </MudSelect>
            </div>
        </div>
    </div>
</div>
@if (((ValveVm)Value).SignalType == SignalType.RS485)
{
    <div class="col-sm-4">
        <h5>Настройки Modbus</h5>
        <ModbusSettings @bind-Value="((ValveVm)Value).ModbusSettings" />
    </div>
}


@code {

    [Parameter]
    public HardwareVm Value { get; set; }

    [Parameter]
    public EventCallback<HardwareVm> ValueChanged { get; set; }

    private SignalType[] signals = Enum.GetValues(typeof(SignalType)).Cast<SignalType>().ToArray();
}
