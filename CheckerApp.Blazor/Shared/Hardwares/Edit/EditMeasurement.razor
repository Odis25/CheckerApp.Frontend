<div class="col">
    <div class="border p-2">
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Позиция по проекту" @bind-Value="Value.Position" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> Value.Position"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Серийный номер" @bind-Value="Value.SerialNumber" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> Value.SerialNumber"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Тип прибора" @bind-Value="((MeasurementVm)Value).DeviceType" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> ((MeasurementVm)Value).DeviceType"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudTextField Label="Модель прибора" @bind-Value="((MeasurementVm)Value).DeviceModel" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="()=> ((MeasurementVm)Value).DeviceModel"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col">
                <MudNumericField Label="Нижний предел измерений" @bind-Value="((MeasurementVm)Value).MinValue" DecimalPlaces="1" Variant="Variant.Outlined"></MudNumericField>
                <ValidationMessage For="()=> ((MeasurementVm)Value).MinValue"></ValidationMessage>
            </div>
            <div class="col">
                <MudNumericField Label="Верхний предел измерений" @bind-Value="((MeasurementVm)Value).MaxValue" DecimalPlaces="1" Variant="Variant.Outlined"></MudNumericField>
                <ValidationMessage For="()=> ((MeasurementVm)Value).MaxValue"></ValidationMessage>
            </div>
            <div class="col">
                @if (Value.HardwareType == HardwareType.Pressure || Value.HardwareType == HardwareType.DiffPressure)
                {
                    <MudSelect Label="Единицы измерения" @bind-Value="((MeasurementVm)Value).EU" Variant="Variant.Outlined">
                        @foreach (var item in euArray)
                            {
                            <MudSelectItem Value="item">@item</MudSelectItem>
                            }
                    </MudSelect>
                }
                else if (Value.HardwareType == HardwareType.GasAnalyzer)
                {
                    <MudSelect Label="Единицы измерения" @bind-Value="((MeasurementVm)Value).EU" Variant="Variant.Outlined">
                        <MudSelectItem Value="@("%")">%</MudSelectItem>
                    </MudSelect>
                }
                else
                {
                    <MudSelect Label="Единицы измерения" @bind-Value="((MeasurementVm)Value).EU" Variant="Variant.Outlined">
                        <MudSelectItem Value="@("Град С.")">Град С.</MudSelectItem>
                    </MudSelect>
                }
            </div>
        </div>
        <div class="row">
            <div class="col">
                <MudSelect @bind-Value="((MeasurementVm)Value).SignalType" Label="Способ подключения" Variant="Variant.Outlined">
                    @foreach (var item in signals)
                    {
                        <MudSelectItem Value="item">@item.GetDisplayName()</MudSelectItem>
                    }
                </MudSelect>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public HardwareVm Value { get; set; }

    [Parameter]
    public EventCallback<HardwareVm> ValueChanged { get; set; }

    private string[] euArray = { "МПа", "кПа", "кгс/м2" };

    private SignalType[] signals = Enum.GetValues(typeof(SignalType)).Cast<SignalType>().ToArray();
}
