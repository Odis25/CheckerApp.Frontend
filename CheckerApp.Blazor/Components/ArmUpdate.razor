@inject IDialogService DialogService

<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Модель операторской станции" @bind-Value="((ArmVm)Value).Name" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).Name" />
    </MudItem>
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Серийный номер" @bind-Value="Value.SerialNumber" Variant="Variant.Outlined" For="()=> Value.SerialNumber" />
    </MudItem>
</MudGrid>
<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Модель монитора" @bind-Value="((ArmVm)Value).Monitor" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).Monitor" />
    </MudItem>
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Серийный номер монитора" @bind-Value="((ArmVm)Value).MonitorSN" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).MonitorSN" />
    </MudItem>
</MudGrid>
<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Модель клавиатуры" @bind-Value="((ArmVm)Value).Keyboard" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).Keyboard" />
    </MudItem>
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Серийный номер клавиатуры" @bind-Value="((ArmVm)Value).KeyboardSN" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).KeyboardSN" />
    </MudItem>
</MudGrid>
<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Модель мыши" @bind-Value="((ArmVm)Value).Mouse" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).Mouse" />
    </MudItem>
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Серийный номер мыши" @bind-Value="((ArmVm)Value).MouseSN" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).MouseSN" />
    </MudItem>
</MudGrid>
<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudSelect Margin="Margin.Dense" Label="Операционная система" @bind-Value="((ArmVm)Value).OS" Variant="Variant.Outlined">
            <MudSelectItem Value="@("")">---</MudSelectItem>
            <MudSelectItem Value="@("Windows 7(x86)")">Windows 7(x86)</MudSelectItem>
            <MudSelectItem Value="@("Windows 7(x64)")">Windows 7(x64)</MudSelectItem>
            <MudSelectItem Value="@("Windows 10(x86)")">Windows 10(x86)</MudSelectItem>
            <MudSelectItem Value="@("Windows 10(x64)")">Windows 10(x64)</MudSelectItem>
            <MudSelectItem Value="@("Windows Server 2008(x86)")">Windows Server 2008(x86)</MudSelectItem>
            <MudSelectItem Value="@("Windows Server 2008(x64)")">Windows Server 2008(x64)</MudSelectItem>
            <MudSelectItem Value="@("Windows Server 2016(x86)")">Windows Server 2016(x86)</MudSelectItem>
            <MudSelectItem Value="@("Windows Server 2016(x64)")">Windows Server 2016(x64)</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Код продукта" @bind-Value="((ArmVm)Value).ProductKeyOS" Variant="Variant.Outlined" For="()=> ((ArmVm)Value).ProductKeyOS" />
    </MudItem>
</MudGrid>
<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudCheckBox Label="RAID-массив" @bind-Checked="((ArmVm)Value).HasRAID" />
    </MudItem>
    <MudItem xs="6">
        <MudTextField Margin="Margin.Dense" Label="Позиция по проекту" @bind-Value="Value.Position" Variant="Variant.Outlined" For="()=> Value.Position" />
    </MudItem>
</MudGrid>

<MudDivider Class="mt-3" />

<MudGrid Justify="Justify.Center">
    <MudItem xs="12">
        <MudChipSet AllClosable="true" OnClose="Remove">
            @for (int i = 0; i < ((ArmVm)Value).NetworkAdapters.Count; i++)
            {
                var adapter = ((ArmVm)Value).NetworkAdapters[i];
                <MudChip Text="@i.ToString()">@(adapter.IP + " (" + adapter.MacAddress + ") ")</MudChip>
            }
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" FullWidth="true" OnClick="Add">Добавить сетевую карту</MudButton>
        </MudChipSet>
    </MudItem>
</MudGrid>


@code {

    [Parameter] public HardwareVm Value { get; set; }
    [Parameter] public EventCallback<HardwareVm> ValueChanged { get; set; }

    private async Task Add()
    {
        var options = new DialogOptions { CloseButton = true, FullWidth = true };
        var dialog = DialogService.Show<NetworkAdapterAdd>("", options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            var adapter = (NetworkAdapterDto)result.Data;
            ((ArmVm)Value).NetworkAdapters.Add(adapter);
        }
    }

    public void Remove(MudChip chip)
    {
        var index = int.Parse(chip.Text);
        ((ArmVm)Value).NetworkAdapters.RemoveAt(index);
    }
}
